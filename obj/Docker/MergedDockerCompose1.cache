name: dockercompose13756272347626965940
services:
  car.api:
    build:
      context: A:\TEST DOTNET\GetGo\Car
      dockerfile: Car.Api/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Car.Api
      target: base
    container_name: Car.Api
    depends_on:
      postgres_image:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: http://+:7005
      DB_CONNECTION_STRING: host=postgres_image;port=5432;database=cardb;username=postgres;password=postgres
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: carapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net6.0/Car.Api.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      dockerapi-dev: null
    ports:
    - mode: ingress
      target: 7005
      published: "7005"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: A:\TEST DOTNET\GetGo\Car\Car.Api
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\TAUFIQ\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\TAUFIQ\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\TAUFIQ\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\TAUFIQ\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: A:\TEST DOTNET\GetGo\Car
      target: /src
      bind:
        create_host_path: true
  postgres_image:
    environment:
      POSTGRES_DB: cardb
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    image: postgres:latest
    networks:
      dockerapi-dev: null
    ports:
    - mode: ingress
      target: 5432
      published: "5433"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: db_volume
      target: /var/lib/postgresql/data
      volume: {}
networks:
  dockerapi-dev:
    name: dockercompose13756272347626965940_dockerapi-dev
    driver: bridge
volumes:
  db_volume:
    name: dockercompose13756272347626965940_db_volume